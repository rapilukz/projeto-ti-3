@model Maio11_Best.Models.player

@{
    string formattedBirthdate = Model.birthdate.Value.ToString("yyyy-MM-dd");
}

<div>
    <div class="form-group mt-2 mb d-flex align-items-center gap-4">
        @if (Model.photo_path == null || String.IsNullOrEmpty(Model.photo_path))
        {
            <img width="60" src="@Url.Content("~/fotos/coaches/no-logo.png")" alt="" />
        }
        else
        {
            <img width="60" src="@Url.Content("~/fotos/coaches/" + System.IO.Path.GetFileName(Model.photo_path))" alt="" />
        }
        <h4>@Model.player_name details</h4>
    </div>

    <div class="form-horizontal d-flex flex-column gap-3 mt-3">
        <div class="form-group">
            @Html.LabelFor(model => model.player_name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.player_name, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.position, "Coaching License", htmlAttributes: new { @class = "control -label col-md-2" })
            @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.birthdate, "Birthdate", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.birthdate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Team.team_name, "Team", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Team.team_name, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
    var birthdateValue = '@Html.Raw(formattedBirthdate)';

    if (birthdateValue) {
        var date = new Date(birthdateValue);
        if (!isNaN(date)) {
            var formattedDate = date.toISOString().split('T')[0]; // Format as yyyy-MM-dd
            document.getElementById('birthdate').value = formattedDate;
        } else {
            console.error('Invalid date format:', birthdateValue);
        }
    }
    });
</script>

<div class="mt-4">
    @Html.ActionLink("Back to List", "PlayerList", null, new { @class="btn btn-primary" })
</div>
