@{
    ViewBag.Title = "Teams";
    var isAuthenticated = User.Identity.IsAuthenticated;
}

<h2>Teams</h2>
<link href="~/DataTables/datatables.css" rel="stylesheet">

@if (User.Identity.IsAuthenticated)
{
    <div class="mb-2">
        @Html.ActionLink("Create New", "InsertTeam", null, new { @class = "icon-button btn btn-primary fa fa-plus" })
        @Html.ActionLink("Export to Excel", "ExportToExcel", null, new { @class = "icon-button btn btn-success fa fa-file-excel-o" })
    </div>
}


<table id="tabela" class="table table-responsive table-bordered table-striped">
    <tr class="text-center">
        <th>Id</th>
        <th>Name</th>
        <th>Logo</th>
        <th>Founded in</th>
        <th>Country</th>
        <th></th>
    </tr>
</table>


@section tabela {
    <script src="~/DataTables/datatables.js"></script>
    <script>
        var isAuthenticated = @Html.Raw(Json.Encode(isAuthenticated));
        $(function () {
            tabela = $("#tabela").DataTable({
                "language": {
                    "lengthMenu": "_MENU_",
                    "search": "",
                    "searchPlaceholder": "Search...",
                    "zeroRecords": "Zero Records Found",
                    "info": "Page _PAGE_ of _PAGES_",
                    "infoEmpty": "No Records",
                },
                "processing": true,
                "filter": true,
                "lengthMenu": [[3, 5, 10, 25, 50, -1], [3, 5, 10, 25, 50, "Todos"]],
                "pageLength": 3,
                "ajax": {
                    'url': "/Team/GetTeams",
                    'type': 'get',
                    'dataType': 'json'

                },
                "columns": [
                    { data: "TeamId", title: "Id", className: "id-row" },
                    { data: "TeamName", title: "Name", className: "name-row" },
                    {
                        "data": "PhotoPath",
                        "title": "Photo",
                        "className": "text-center",
                        "autowidth": true,
                        "render": function (data, type, row) {
                            if (data == null || data == "") {
                                return '<img width="50" src="@Url.Content("~/fotos/teams/no-logo.png")" alt="No Logo" />';
                            } else {
                                return '<img width="50" src="@Url.Content("~/fotos/teams/")' + data + '" alt="Team Logo" />';
                            }
                        }

                    },
                    { data: "FoundationYear", title: "Founded In", className: "year-row" },
                    { data: "Country", title: "Country", className: "country-row" },
                    {
                        data: "TeamId",
                        className: "actions-row",
                        render: function (data, type, row) {
                            let actions = '<a href="@Url.Action("DetailsTeam", "Team")/' + row.TeamId + '" class="icon-button btn btn-secondary fa fa-eye">Details</a>';
                            if (isAuthenticated) {
                                actions += ' <a href="@Url.Action("EditTeam", "Team")/' + row.TeamId + '" class="icon-button btn btn-primary fa fa-pencil">Edit</a>';
                                actions += ' <a href="@Url.Action("DeleteTeam", "Team")/' + row.TeamId + '" class="icon-button btn btn-danger fa fa-trash">Delete</a>';
                            }
                            return actions;
                        }
                    },
                ]
            });
        });
    </script>
}