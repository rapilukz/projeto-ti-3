@using PagedList.Mvc
@model PagedList.IPagedList<Maio11_Best.Models.trainer>

@{
    ViewBag.Title = "TrainerList";
}

<h2>Trainer</h2>

@if (User.Identity.IsAuthenticated)
{
    <div class="mb-2">
        @Html.ActionLink("Create New", "InsertTrainer", null, new { @class = "icon-button btn btn-primary fa fa-plus" })
        @Html.ActionLink("Export to Excel", "ExportToExcel", null, new { @class = "icon-button btn btn-success fa fa-file-excel-o" })
    </div>
}

<table class="table table-responsive table-bordered table-striped">
    <tr class="text-center">
        <th>Trainer</th>
        <th>Photo</th>
        <th>Coaching License</th>
        <th>Team</th>
        @if (User.Identity.IsAuthenticated)
        {
            <th></th>
        }
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.trainer_name)
            </td>
            <td>
                @if (item.photo_path == null || String.IsNullOrEmpty(item.photo_path))
                {
                    <img width="50" src="@Url.Content("~/fotos/coachs/no-coach.jpg")" alt="" />
                }
                else
                {
                    <img width="50" src="@Url.Content("~/fotos/coachs/" + System.IO.Path.GetFileName(item.photo_path))" alt="" />
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.coaching_license)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Team.team_name)
            </td>
            @if (User.Identity.IsAuthenticated)
            {
                <td class="actions-row">
                    @Html.ActionLink("Edit", "EditTrainer", new { id = item.trainer_id }, new { @class = "icon-button btn btn-primary fa fa-pencil" })
                    @Html.ActionLink("Delete", "DeleteTrainer", new { id = item.trainer_id }, new { @class = "icon-button btn btn-danger fa fa-trash" })
                </td>
            }
        </tr>
    }

</table>

<div class="d-flex justify-content-sm-between">
    @Html.PagedListPager(Model, page => Url.Action("TrainerList", "Trainer", new { page }))
    <span>Page @(Model.PageNumber > Model.PageCount ? 1 : Model.PageNumber) of @Model.PageCount</span>
</div>
